var menu = {
    _classMenuOpen: "menu--is-open",
    _toggleMenu: "toggle.menu",
    _$body: null,
    init: function() {
        this._$body = $("body"), this._initEvents()
    },
    _initEvents: function() {
        var t = this;
        $("#js-toggle-menu").on("click", function(e) {
            e.stopPropagation(), $(this).trigger(t._toggleMenu)
        }), this._$body.on(this._toggleMenu, function(e) {
            t._$body.toggleClass(t._classMenuOpen), t.mobileAnimation()
        }).on("click", function(e) {
            t._$body.hasClass(t._classMenuOpen) && !$(e.target).closest(".site__nav").length && t._$body.trigger(_toggleMenu)
        })
    },
    close: function() {
        this._$body.removeClass(this._classMenuOpen)
    },
    mobileAnimation: function() {
        var t = new TimelineLite({});
        t.set(".menu-item", {
            opacity: 0
        }).staggerFromTo(".menu-item", 1, {
            opacity: 0,
            x: 25
        }, {
            opacity: 1,
            x: 0
        }, .3, .3)
    }
};
$(function() {
    menu.init()
});
var app = {
    _body_scrollLeft: 0,
    _body_scrollTop: 0,
    _waypoints: null,
    is_mobile: !0,
    is_touch: !0,
    viewport: {
        width: 0,
        height: 0
    },
    $header: null,
    $nav: null,
    init: function() {
        this.$header = $("#js-header"), this.$nav = $("#js-nav"), this.inlineSVG(), this._resetFeatureTests(), this._resetViewportDimensions(), this._initPlugins(), this._initEvents()
    },
    _initPlugins: function() {},
    _initEvents: function() {
        var t = this;
        $(window).on("resize.app", function() {
            t._resetFeatureTests(), t._resetViewportDimensions()
        }).on("orientationchange.app", function() {
            t._resetViewportDimensions()
        })
    },
    disableScroll: function() {
        this._body_scrollLeft = self.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft, this._body_scrollTop = self.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop, window.scrollTo(this._body_scrollLeft, this._body_scrollTop), this.is_touch && $(document).on("touchmove.app", function(t) {
            t.preventDefault()
        })
    },
    enableScroll: function(t) {
        "undefined" == typeof t && (t = this._body_scrollTop);
        var e = !0;
        "boolean" == typeof t && t === !1 && (e = !1), $("html").css("overflow", "visible"), e && window.scrollTo(this._body_scrollLeft, t), this.is_touch && $(document).off("touchmove.app")
    },
    _resetFeatureTests: function() {
        this.is_mobile = feature.matchMedia && window.matchMedia("(max-width: 991px)").matches, this.is_touch = feature.touch
    },
    _resetViewportDimensions: function() {
        this.viewport.width = $(window).width(), this.viewport.height = $(window).height()
    },
    resetWaypoints: function() {
        var t = this;
        if (this._waypoints && this._waypoints.length) {
            for (var e in this._waypoints) this._waypoints[e].destroy();
            this._waypoints = null
        }
        this._waypoints = $("[data-nav-color]").waypoint({
            group: "nav-color",
            offset: function() {
                return parseInt(t.$nav.css("top")) + t.$nav.outerHeight() / 2
            },
            handler: function(e) {
                var i = "down" === e ? this : this.previous();
                if (i) {
                    var o = $(i.element).data("nav-color");
                    t.setHeaderColor(o)
                }
            }
        })
    },
    setHeaderColor: function(t) {
        this.$header.removeClass(function() {
            return this.className.split(" ").filter(function(t) {
                return t.match(/color-+/)
            }).join(" ")
        }), "undefined" != typeof t && this.$header.addClass("color-" + t)
    },
    inlineSVG: function() {
        $("img.svg").each(function() {
            var t = $(this),
                e = t.attr("id"),
                i = t.attr("class"),
                o = t.attr("src"),
                n = t.attr("width"),
                s = t.attr("height");
            $.get(o, function(o) {
                var a = $(o).find("svg");
                "undefined" != typeof e && (a = a.attr("id", e)), "undefined" != typeof i && (a = a.attr("class", i + " replaced-svg")), a = a.removeAttr("xmlns:a"), n && s && a.attr({
                    width: n,
                    height: s
                }), !a.attr("viewBox") && a.attr("height") && a.attr("width") && a.attr("viewBox", "0 0 " + a.attr("height") + " " + a.attr("width")), t.replaceWith(a)
            }, "xml")
        })
    },
    setTitles: function() {
        $(".js-project--title-wrapper").flowtype({
            maximum: 1600,
            minFont: 40,
            maxFont: 150,
            fontRatio: 10
        })
    }
};
$(function() {
    app.init()
});